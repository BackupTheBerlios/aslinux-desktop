#############################################################################
# Makefile for building: ash3xm
# Generated by qmake (2.01a) (Qt 4.4.3) on: lun jun 8 13:49:58 2009
# Project:  src.pro
# Template: app
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = i586-mingw32msvc-g++
DEFINES       = -DUNICODE -DQT_LARGEFILE_SUPPORT -DQT_NO_DEBUG -DQT_XML_LIB -DQT_GUI_LIB -DQT_NETWORK_LIB -DQT_CORE_LIB
CFLAGS        = -O2 -w $(DEFINES)
CXXFLAGS      = -O2 -w $(DEFINES)
INCPATH       = -I"../../../../qt4-win32/include/QtCore" -I"../../../../qt4-win32/include/QtCore" -I"../../../../qt4-win32/include/QtNetwork" -I"../../../../qt4-win32/include/QtNetwork" -I"../../../../qt4-win32/include/QtGui" -I"../../../../qt4-win32/include/QtGui" -I"../../../../qt4-win32/include/QtXml" -I"../../../../qt4-win32/include/QtXml" -I"../../../../qt4-win32/include" -I"release" -I"." -I"/usr/i586-mingw32msvc/include" -I"/usr/share/qt4/mkspecs/mingw32-g++"
LINK        =        i586-mingw32msvc-g++
LFLAGS        =        -mthreads -Wl,-enable-stdcall-fixup -Wl,-enable-auto-import -Wl,-enable-runtime-pseudo-reloc -mwindows -Wl,-s
LIBS        =        -L"/opt/qt4-win32/lib" -lQtXml4 -lQtGui4 -lQtNetwork4 -lQtCore4
QMAKE         = /usr/bin/qmake-qt4
IDC           = /usr/bin/idc
IDL           = midl
ZIP           = zip -r -9
DEF_FILE      = 
RES_FILE      = 
COPY          = cp
COPY_FILE     = $(COPY)
COPY_DIR      = cp -r
DEL_FILE      = rm -f
DEL_DIR       = rm -rf
MOVE          = mv
CHK_DIR_EXISTS= if not exist
MKDIR         = mkdir -p
INSTALL_FILE    = $(COPY_FILE)
INSTALL_PROGRAM = $(COPY_FILE)
INSTALL_DIR     = $(COPY_DIR)

####### Output directory

OBJECTS_DIR   = release/

####### Files

SOURCES       = main.cpp \
		mclient.cpp \
		client.cpp \
		response.cpp \
		request.cpp \
		variant.cpp \
		cmsgbox.cpp release/moc_mclient.cpp \
		release/moc_client.cpp \
		release/moc_cmsgbox.cpp \
		release/qrc_systray.cpp
OBJECTS       = release/main.o \
		release/mclient.o \
		release/client.o \
		release/response.o \
		release/request.o \
		release/variant.o \
		release/cmsgbox.o \
		release/moc_mclient.o \
		release/moc_client.o \
		release/moc_cmsgbox.o \
		release/qrc_systray.o
DIST          = 
QMAKE_TARGET  = ash3xm
DESTDIR        = bin/ #avoid trailing-slash linebreak
TARGET         = ash3xm.exe
DESTDIR_TARGET = bin/ash3xm.exe

####### Implicit rules

.SUFFIXES: .cpp .cc .cxx .C .c

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o $@ $<

####### Build rules

first: all
all: Makefile.Release  $(DESTDIR_TARGET)

$(DESTDIR_TARGET): ui_mclient.h ui_CMessageBox.h $(OBJECTS) 
	$(LINK) $(LFLAGS) -o $(DESTDIR_TARGET) object_script.ash3xm.Release  $(LIBS)


qmake:  FORCE
	@$(QMAKE) -spec /usr/share/qt4/mkspecs/mingw32-g++ -unix -o Makefile.Release src.pro

dist:
	$(ZIP) ash3xm.zip $(SOURCES) $(DIST) ../ash3xm.pro /usr/share/qt4/mkspecs/qconfig.pri /usr/share/qt4/mkspecs/features/qt_functions.prf /usr/share/qt4/mkspecs/features/qt_config.prf /usr/share/qt4/mkspecs/features/exclusive_builds.prf /usr/share/qt4/mkspecs/features/default_pre.prf /usr/share/qt4/mkspecs/features/release.prf /usr/share/qt4/mkspecs/features/debug_and_release.prf /usr/share/qt4/mkspecs/features/default_post.prf /usr/share/qt4/mkspecs/features/build_pass.prf /usr/share/qt4/mkspecs/features/warn_off.prf /usr/share/qt4/mkspecs/features/unix/x11.prf /usr/share/qt4/mkspecs/features/unix/x11inc.prf /usr/share/qt4/mkspecs/features/unix/x11lib.prf /usr/share/qt4/mkspecs/features/qt.prf /usr/share/qt4/mkspecs/features/unix/thread.prf /usr/share/qt4/mkspecs/features/moc.prf /usr/share/qt4/mkspecs/features/resources.prf /usr/share/qt4/mkspecs/features/uic.prf /usr/share/qt4/mkspecs/features/yacc.prf /usr/share/qt4/mkspecs/features/lex.prf  HEADERS RESOURCES IMAGES SOURCES OBJECTIVE_SOURCES FORMS YACCSOURCES YACCSOURCES LEXSOURCES 

clean: compiler_clean 
	-$(DEL_FILE) release/main.o release/mclient.o release/client.o release/response.o release/request.o release/variant.o release/cmsgbox.o release/moc_mclient.o release/moc_client.o release/moc_cmsgbox.o release/qrc_systray.o

distclean: clean
	-$(DEL_FILE) $(DESTDIR_TARGET)
	-$(DEL_FILE) Makefile.Release

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: release/moc_mclient.cpp release/moc_client.cpp release/moc_cmsgbox.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) release/moc_mclient.cpp release/moc_client.cpp release/moc_cmsgbox.cpp
release/moc_mclient.cpp: ui_mclient.h \
		cmsgbox.h \
		ui_CMessageBox.h \
		client.h \
		variant.h \
		mclient.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) -D__GNUC__ -DWIN32 mclient.h -o release/moc_mclient.cpp

release/moc_client.cpp: variant.h \
		client.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) -D__GNUC__ -DWIN32 client.h -o release/moc_client.cpp

release/moc_cmsgbox.cpp: ui_CMessageBox.h \
		cmsgbox.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) -D__GNUC__ -DWIN32 cmsgbox.h -o release/moc_cmsgbox.cpp

compiler_rcc_make_all: release/qrc_systray.cpp
compiler_rcc_clean:
	-$(DEL_FILE) release/qrc_systray.cpp
release/qrc_systray.cpp: systray.qrc \
		images/note.png \
		images/trash.png \
		images/bad.png \
		images/heart.png \
		images/mail.png \
		sounds/1.wav
	/usr/bin/rcc -name systray systray.qrc -o release/qrc_systray.cpp

compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all: ui_mclient.h ui_CMessageBox.h
compiler_uic_clean:
	-$(DEL_FILE) ui_mclient.h ui_CMessageBox.h
ui_mclient.h: mclient.ui
	/usr/bin/uic-qt4 mclient.ui -o ui_mclient.h

ui_CMessageBox.h: CMessageBox.ui
	/usr/bin/uic-qt4 CMessageBox.ui -o ui_CMessageBox.h

compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean compiler_rcc_clean compiler_uic_clean 



####### Compile

release/main.o: main.cpp mclient.h \
		ui_mclient.h \
		cmsgbox.h \
		ui_CMessageBox.h \
		client.h \
		variant.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/main.o main.cpp

release/mclient.o: mclient.cpp mclient.h \
		ui_mclient.h \
		cmsgbox.h \
		ui_CMessageBox.h \
		client.h \
		variant.h \
		response.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/mclient.o mclient.cpp

release/client.o: client.cpp client.h \
		variant.h \
		request.h \
		response.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/client.o client.cpp

release/response.o: response.cpp response.h \
		variant.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/response.o response.cpp

release/request.o: request.cpp request.h \
		variant.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/request.o request.cpp

release/variant.o: variant.cpp variant.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/variant.o variant.cpp

release/cmsgbox.o: cmsgbox.cpp cmsgbox.h \
		ui_CMessageBox.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/cmsgbox.o cmsgbox.cpp

release/moc_mclient.o: release/moc_mclient.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/moc_mclient.o release/moc_mclient.cpp

release/moc_client.o: release/moc_client.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/moc_client.o release/moc_client.cpp

release/moc_cmsgbox.o: release/moc_cmsgbox.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/moc_cmsgbox.o release/moc_cmsgbox.cpp

release/qrc_systray.o: release/qrc_systray.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/qrc_systray.o release/qrc_systray.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

