# Makefile.in generated by automake 1.6.3 from Makefile.am.
# KDE tags expanded automatically by am_edit - $Revision: 1.1 $ 
# poof2/Makefile.  Generated from Makefile.in by configure.

# Copyright 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002
# Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.


SHELL = /bin/sh

srcdir = .
top_srcdir = ..

prefix = /opt/projects/poof2/poof2/package
exec_prefix = ${prefix}

bindir = ${exec_prefix}/bin
sbindir = ${exec_prefix}/sbin
libexecdir = ${exec_prefix}/libexec
datadir = ${prefix}/share
sysconfdir = ${prefix}/etc
sharedstatedir = ${prefix}/com
localstatedir = ${prefix}/var
libdir = ${exec_prefix}/lib
infodir = ${prefix}/share/info
mandir = ${prefix}/share/man
includedir = ${prefix}/include
oldincludedir = /usr/include
pkgdatadir = $(datadir)/poof2
pkglibdir = $(libdir)/poof2
pkgincludedir = $(includedir)/poof2
top_builddir = ..

ACLOCAL = ${SHELL} /opt/projects/poof2/poof2/trunk/admin/missing --run aclocal-1.6
AUTOCONF = ${SHELL} /opt/projects/poof2/poof2/trunk/admin/missing --run autoconf
AUTOMAKE = ${SHELL} /opt/projects/poof2/poof2/trunk/admin/missing --run automake-1.6
AUTOHEADER = ${SHELL} /opt/projects/poof2/poof2/trunk/admin/missing --run autoheader

am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = /usr/bin/install -c -p
INSTALL_PROGRAM = ${INSTALL} $(INSTALL_STRIP_FLAG)
INSTALL_DATA = ${INSTALL} -m 644
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_SCRIPT = ${INSTALL}
INSTALL_HEADER = $(INSTALL_DATA)
transform = s,x,x,
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_alias = 
build_triplet = i686-pc-linux-gnu
host_alias = 
host_triplet = i686-pc-linux-gnu
target_alias = 
target_triplet = i686-pc-linux-gnu

EXEEXT = 
OBJEXT = o
PATH_SEPARATOR = :
AMTAR = ${SHELL} /opt/projects/poof2/poof2/trunk/admin/missing --run tar
ARTSCCONFIG = /usr/bin/artsc-config
AS = @AS@
AUTODIRS = 
AWK = gawk
CC = gcc
CONF_FILES =  $(top_srcdir)/./admin/configure.in.min $(top_srcdir)/configure.in.in
CPP = gcc -E
CXX = g++-3.4
CXXCPP = g++-3.4 -E
DCOPIDL = /usr/bin/dcopidl
DCOPIDL2CPP = /usr/bin/dcopidl2cpp
DCOP_DEPENDENCIES = $(DCOPIDL)
DEPDIR = .deps
DLLTOOL = @DLLTOOL@
DOXYGEN = @DOXYGEN@
DOXYGEN_PROJECT_NAME = @DOXYGEN_PROJECT_NAME@
DOXYGEN_PROJECT_NUMBER = @DOXYGEN_PROJECT_NUMBER@
DPMSINC = @DPMSINC@
DPMSLIB = @DPMSLIB@
ECHO = echo
FRAMEWORK_COREAUDIO = 
GCJ = @GCJ@
GCJFLAGS = @GCJFLAGS@
GLINC = @GLINC@
GLLIB = @GLLIB@
GMSGFMT = /usr/bin/msgfmt
IDL = @IDL@
IDL_DEPENDENCIES = @IDL_DEPENDENCIES@
INSTALL_STRIP_PROGRAM = ${SHELL} $(install_sh) -c -s
JAR = @JAR@
JAVAC = @JAVAC@
JAVAH = @JAVAH@
JVMLIBS = @JVMLIBS@
KDECONFIG = /usr/bin/kde-config
KDE_EXTRA_RPATH = 
KDE_HAS_DOXYGEN = @KDE_HAS_DOXYGEN@
KDE_HAVE_DOT = @KDE_HAVE_DOT@
KDE_INCLUDES = -I/usr/include/kde
KDE_LDFLAGS = -L/usr/lib
KDE_MT_LDFLAGS = 
KDE_MT_LIBS = -lpthread
KDE_PLUGIN = -avoid-version -module -no-undefined $(KDE_RPATH) $(KDE_MT_LDFLAGS)
KDE_RPATH = -R $(kde_libraries) -R $(x_libraries)
KDE_USE_CLOSURE_FALSE = #
KDE_USE_CLOSURE_TRUE = 
KDE_USE_FINAL_FALSE = 
KDE_USE_FINAL_TRUE = #
KDE_XSL_STYLESHEET = /usr/share/apps/ksgmltools2/customization/kde-chunk.xsl
LEX = @LEX@
LEXLIB = @LEXLIB@
LEX_OUTPUT_ROOT = @LEX_OUTPUT_ROOT@
LIBBZ2 = @LIBBZ2@
LIBCOMPAT = 
LIBCRYPT = -lcrypt
LIBDL = -ldl
LIBGEN = @LIBGEN@
LIBJPEG = -ljpeg
LIBMICO = @LIBMICO@
LIBOBJS = 
LIBPNG = -lpng -lz -lm
LIBPTHREAD = -lpthread
LIBPYTHON = @LIBPYTHON@
LIBQIMGIO = @LIBQIMGIO@
LIBRESOLV = -lresolv
LIBSHADOW = @LIBSHADOW@
LIBSM = -lSM -lICE
LIBSOCKET = 
LIBSSL = @LIBSSL@
LIBTIFF = @LIBTIFF@
LIBTOOL = $(SHELL) $(top_builddir)/libtool --silent
LIBUCB = 
LIBUTIL = -lutil
LIBXINERAMA = 
LIBZ = -lz
LIB_KAB = -lkab
LIB_KABC = -lkabc
LIB_KDECORE = -lkdecore
LIB_KDEPRINT = -lkdeprint
LIB_KDEUI = -lkdeui
LIB_KFILE = -lkio
LIB_KFM = 
LIB_KHTML = -lkhtml
LIB_KIMGIO = @LIB_KIMGIO@
LIB_KIO = -lkio
LIB_KPARTS = -lkparts
LIB_KSPELL = -lkspell
LIB_KSYCOCA = -lkio
LIB_POLL = 
LIB_QPE = 
LIB_QT = -lqt-mt  $(LIBPNG) -lXext $(LIB_X11) $(LIBSM) -lpthread
LIB_QTOPIA = @LIB_QTOPIA@
LIB_SMB = -lsmb
LIB_X11 = -lX11 $(LIBSOCKET)
LIB_XEXT = -lXext
LN_S = ln -s
MCOPIDL = /usr/bin/mcopidl
MEINPROC = /usr/bin/meinproc
MICO_INCLUDES = @MICO_INCLUDES@
MICO_LDFLAGS = @MICO_LDFLAGS@
MOC = /usr/share/qt3/bin/moc
MSGFMT = /usr/bin/msgfmt
NOOPT_CFLAGS = -O0
NOOPT_CXXFLAGS = -O0
NOREPO = -fno-repo
OBJDUMP = @OBJDUMP@
PACKAGE = poof2
PAMLIBS = @PAMLIBS@
PASSWDLIBS = @PASSWDLIBS@
PYTHONINC = @PYTHONINC@
PYTHONLIB = @PYTHONLIB@
PYTHONMODDIR = @PYTHONMODDIR@
QTDOCDIR = @QTDOCDIR@
QTE_NORTTI = 
QTOPIA_INCLUDES = @QTOPIA_INCLUDES@
QT_INCLUDES = -I/usr/share/qt3/include
QT_LDFLAGS = 
RANLIB = ranlib
RC = @RC@
REPO = -frepo
SETUIDFLAGS = @SETUIDFLAGS@
SSL_INCLUDES = @SSL_INCLUDES@
SSL_LDFLAGS = @SSL_LDFLAGS@
STRIP = strip
TOPSUBDIRS =  doc po poof2
UIC = /usr/share/qt3/bin/uic -L $(kde_widgetdir) -nounload
UIC_TR = tr2i18n
USER_INCLUDES = 
USER_LDFLAGS = 
USE_EXCEPTIONS = -fexceptions
USE_RTTI = 
USE_THREADS = 
VERSION = 0.1
WOVERLOADED_VIRTUAL = 
XGETTEXT = /usr/bin/xgettext
XPMINC = @XPMINC@
XPMLIB = @XPMLIB@
X_EXTRA_LIBS = 
X_INCLUDES = -I.
X_LDFLAGS = -L/usr/X11R6/lib
X_PRE_LIBS = 
all_includes = -I/usr/include/kde -I/usr/share/qt3/include -I. 
all_libraries = -L/usr/X11R6/lib -L/usr/lib 
am__include = include
am__quote = 
idldir = @idldir@
install_sh = /opt/projects/poof2/poof2/trunk/admin/install-sh
jni_includes = @jni_includes@
kde_appsdir = ${prefix}/share/applnk
kde_bindir = ${exec_prefix}/bin
kde_confdir = ${prefix}/share/config
kde_datadir = ${prefix}/share/apps
kde_htmldir = ${prefix}/share/doc/HTML
kde_icondir = ${prefix}/share/icons
kde_includes = /usr/include/kde
kde_libraries = /usr/lib
kde_libs_htmldir = /usr/share/doc/kde/HTML
kde_libs_prefix = /usr
kde_locale = ${prefix}/share/locale
kde_mimedir = ${prefix}/share/mimelnk
kde_moduledir = ${libdir}/kde3
kde_qtver = 3
kde_servicesdir = ${prefix}/share/services
kde_servicetypesdir = ${prefix}/share/servicetypes
kde_sounddir = ${prefix}/share/sounds
kde_styledir = ${libdir}/kde3/plugins/styles
kde_templatesdir = ${prefix}/share/templates
kde_wallpaperdir = ${prefix}/share/wallpapers
kde_widgetdir = /usr/lib/kde3/plugins/designer
micodir = @micodir@
qt_includes = /usr/share/qt3/include
qt_libraries = 
x_includes = .
x_libraries = /usr/X11R6/lib

####### kdevelop will overwrite this part!!! (begin)##########
bin_PROGRAMS = poof2

#>- poof2_SOURCES = dcopdemoiface_skel.cpp dcoper.cpp mainWin.ui main.cpp \
#>- 	dcopdemoiface.kidl
#>+ 2
poof2_SOURCES=dcopdemoiface_skel.cpp dcoper.cpp  main.cpp \
	dcopdemoiface.kidl mainWin.cpp

poof2_LDADD = -lkio $(LIB_KDEUI) $(LIB_KDECORE) $(LIB_QT) $(LIBSOCKET)

EXTRA_DIST = main.cpp poof2.cpp poof2.h lo16-app-poof2.png mainWin.ui dcoper.cpp dcoper.h dcopdemoiface.h dcopdemoiface_skel.cpp 

####### kdevelop will overwrite this part!!! (end)############
# These paths are KDE specific. Use them:
# kde_appsdir         Where your application's menu entry (.desktop) should go to.
# kde_icondir         Where your icon should go to - better use KDE_ICON.
# kde_sounddir        Where your sounds should go to.
# kde_htmldir         Where your docs should go to. (contains lang subdirs)
# kde_datadir         Where you install application data. (Use a subdir)
# kde_locale          Where translation files should go to. (contains lang subdirs)
# kde_cgidir          Where cgi-bin executables should go to.
# kde_confdir         Where config files should go to (system-wide ones with default values).
# kde_mimedir         Where mimetypes .desktop files should go to.
# kde_servicesdir     Where services .desktop files should go to.
# kde_servicetypesdir Where servicetypes .desktop files should go to.
# kde_toolbardir      Where general toolbar icons should go to (deprecated, use KDE_ICON).
# kde_wallpaperdir    Where general wallpapers should go to.
# kde_templatesdir    Where templates for the "New" menu (Konqueror/KDesktop) should go to.
# kde_bindir          Where executables should go to. Use bin_PROGRAMS or bin_SCRIPTS.
# kde_libdir          Where shared libraries should go to. Use lib_LTLIBRARIES.
# kde_moduledir       Where modules (e.g. parts) should go to. Use kde_module_LTLIBRARIES.
# kde_styledir        Where Qt/KDE widget styles should go to (new in KDE 3).
# kde_designerdir     Where Qt Designer plugins should go to (new in KDE 3).

# set the include path for X, qt and KDE
INCLUDES = $(all_includes)

#>- METASOURCES = AUTO

# the library search path. 
poof2_LDFLAGS = $(all_libraries) $(KDE_RPATH) -lkio

pkgdata_SCRIPTS = libasinsfaz.sh
subdir = poof2
mkinstalldirs = $(SHELL) $(top_srcdir)/admin/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
bin_PROGRAMS = poof2$(EXEEXT)
PROGRAMS = $(bin_PROGRAMS)

am_poof2_OBJECTS = dcopdemoiface_skel.$(OBJEXT) dcoper.$(OBJEXT) \
	main.$(OBJEXT)
#>- poof2_OBJECTS = $(am_poof2_OBJECTS)
#>+ 6
poof2_final_OBJECTS = poof2.all_cpp.o dcopdemoiface.o 
poof2_nofinal_OBJECTS = dcopdemoiface_skel.$(OBJEXT) dcoper.$(OBJEXT) \
	main.$(OBJEXT) mainWin.$(OBJEXT)\
dcoper.moc.o 
poof2_OBJECTS = $(poof2_nofinal_OBJECTS)
#poof2_OBJECTS = $(poof2_final_OBJECTS)
poof2_DEPENDENCIES =
SCRIPTS = $(pkgdata_SCRIPTS)


DEFS = -DHAVE_CONFIG_H
DEFAULT_INCLUDES =  -I. -I$(srcdir) -I$(top_builddir)
CPPFLAGS =  -DQT_THREAD_SUPPORT  -D_REENTRANT
LDFLAGS = 
LIBS = 
depcomp = $(SHELL) $(top_srcdir)/admin/depcomp
am__depfiles_maybe = depfiles
#>- DEP_FILES = ./$(DEPDIR)/dcopdemoiface_skel.Po \
#>- 	./$(DEPDIR)/dcoper.Po ./$(DEPDIR)/main.Po
#>+ 5
#DEP_FILES =  $(DEPDIR)/mainWin.P $(DEPDIR)/dcoper.moc.P  $(DEPDIR)/poof2.all_cpp.P  ./$(DEPDIR)/dcopdemoiface_skel.Po \
#		./$(DEPDIR)/dcoper.Po ./$(DEPDIR)/main.Po
DEP_FILES =  $(DEPDIR)/mainWin.P $(DEPDIR)/dcoper.moc.P  ./$(DEPDIR)/dcopdemoiface_skel.Po \
		./$(DEPDIR)/dcoper.Po ./$(DEPDIR)/main.Po

#>- CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
#>- 	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
#>+ 2
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS)
#>- LTCXXCOMPILE = $(LIBTOOL) --mode=compile $(CXX) $(DEFS) \
#>- 	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
#>- 	$(AM_CXXFLAGS) $(CXXFLAGS)
#>+ 3
LTCXXCOMPILE = $(LIBTOOL) --mode=compile --tag=CXX $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS)
CXXLD = $(CXX)
#>- CXXLINK = $(LIBTOOL) --mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) \
#>- 	$(AM_LDFLAGS) $(LDFLAGS) -o $@
#>+ 2
CXXLINK = $(LIBTOOL) --mode=link --tag=CXX $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
CXXFLAGS = -Wnon-virtual-dtor -Wno-long-long -Wundef -Wall -pedantic -W -Wpointer-arith -Wmissing-prototypes -Wwrite-strings -ansi -D_XOPEN_SOURCE=500 -D_BSD_SOURCE -Wcast-align -Wconversion -O2 -fno-exceptions -fno-check-new
DIST_SOURCES = $(poof2_SOURCES)
DIST_COMMON = Makefile.am Makefile.in
SOURCES = $(poof2_SOURCES)

#>- all: all-am
#>+ 1
all: docs-am  all-am

.SUFFIXES:
.SUFFIXES: .cpp .lo .o .obj
$(srcdir)/Makefile.in:  Makefile.am  $(top_srcdir)/configure.in $(ACLOCAL_M4)
#>- 	cd $(top_srcdir) && \
#>- 	  $(AUTOMAKE) --gnu  poof2/Makefile
#>+ 3
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  poof2/Makefile
	cd $(top_srcdir) && perl admin/am_edit poof2/Makefile.in
Makefile:  $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)
binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(bindir)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	     || test -f $$p1 \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) --mode=install $(binPROGRAMS_INSTALL) $$p $(DESTDIR)$(bindir)/$$f"; \
	   $(INSTALL_PROGRAM_ENV) $(LIBTOOL) --mode=install $(binPROGRAMS_INSTALL) $$p $(DESTDIR)$(bindir)/$$f; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f $(DESTDIR)$(bindir)/$$f"; \
	  rm -f $(DESTDIR)$(bindir)/$$f; \
	done

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo " rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done
poof2$(EXEEXT): $(poof2_OBJECTS) $(poof2_DEPENDENCIES) 
	@rm -f poof2$(EXEEXT)
	$(CXXLINK) $(poof2_LDFLAGS) $(poof2_OBJECTS) $(poof2_LDADD) $(LIBS)
pkgdataSCRIPT_INSTALL = $(INSTALL_SCRIPT)
install-pkgdataSCRIPTS: $(pkgdata_SCRIPTS)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(pkgdatadir)
	@list='$(pkgdata_SCRIPTS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  if test -f $$d$$p; then \
	    f=`echo "$$p" | sed 's|^.*/||;$(transform)'`; \
	    echo " $(pkgdataSCRIPT_INSTALL) $$d$$p $(DESTDIR)$(pkgdatadir)/$$f"; \
	    $(pkgdataSCRIPT_INSTALL) $$d$$p $(DESTDIR)$(pkgdatadir)/$$f; \
	  else :; fi; \
	done

uninstall-pkgdataSCRIPTS:
	@$(NORMAL_UNINSTALL)
	@list='$(pkgdata_SCRIPTS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's|^.*/||;$(transform)'`; \
	  echo " rm -f $(DESTDIR)$(pkgdatadir)/$$f"; \
	  rm -f $(DESTDIR)$(pkgdatadir)/$$f; \
	done

mostlyclean-compile:
	-rm -f *.$(OBJEXT) core *.core

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/dcopdemoiface_skel.Po
include ./$(DEPDIR)/dcoper.Po
include ./$(DEPDIR)/main.Po

distclean-depend:
	-rm -rf ./$(DEPDIR)

.cpp.o:
	source='$<' object='$@' libtool=no \
	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXXCOMPILE) -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<

.cpp.obj:
	source='$<' object='$@' libtool=no \
	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXXCOMPILE) -c -o $@ `cygpath -w $<`

.cpp.lo:
	source='$<' object='$@' libtool=yes \
	depfile='$(DEPDIR)/$*.Plo' tmpdepfile='$(DEPDIR)/$*.TPlo' \
	$(CXXDEPMODE) $(depcomp) \
	$(LTCXXCOMPILE) -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<
CXXDEPMODE = depmode=gcc3

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool
uninstall-info-am:

ETAGS = etags
ETAGSFLAGS =

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$tags$$unique" \
	  || $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH
#>- DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
#>+ 4
KDE_DIST=dcopdemoiface_stub.cpp dcopdemoiface.kidl dcopdemoiface_stub.h kk.cpp mainWin.ui.h libasinsfaz.sh 

DISTFILES= $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST) $(KDE_DIST)


top_distdir = ..
distdir = $(top_distdir)/$(PACKAGE)-$(VERSION)

distdir: $(DISTFILES)
	@list='$(DISTFILES)'; for file in $$list; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkinstalldirs) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS) $(SCRIPTS)

installdirs:
	$(mkinstalldirs) $(DESTDIR)$(bindir) $(DESTDIR)$(pkgdatadir)

install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-rm -f Makefile $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
#>- clean: clean-am
#>+ 1
clean: kde-rpo-clean  clean-am

#>- clean-am: clean-binPROGRAMS clean-generic clean-libtool mostlyclean-am
#>+ 1
clean-am: clean-metasources clean-ui clean-final  clean-binPROGRAMS clean-generic clean-libtool mostlyclean-am

distclean: distclean-am

distclean-am: clean-am distclean-compile distclean-depend \
	distclean-generic distclean-libtool distclean-tags

dvi: dvi-am

dvi-am:

info: info-am

info-am:

install-data-am: install-data-local install-pkgdataSCRIPTS

install-exec-am: install-binPROGRAMS

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am

maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

uninstall-am: uninstall-binPROGRAMS uninstall-info-am uninstall-local \
	uninstall-pkgdataSCRIPTS

.PHONY: GTAGS all all-am check check-am clean clean-binPROGRAMS \
	clean-generic clean-libtool distclean distclean-compile \
	distclean-depend distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am info info-am install \
	install-am install-binPROGRAMS install-data install-data-am \
	install-data-local install-exec install-exec-am install-info \
	install-info-am install-man install-pkgdataSCRIPTS \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic mostlyclean-libtool \
	tags uninstall uninstall-am uninstall-binPROGRAMS \
	uninstall-info-am uninstall-local uninstall-pkgdataSCRIPTS


install-data-local:
#>- 	$(mkinstalldirs) $(kde_icondir)/locolor/16x16/apps/
#>+ 1
	$(mkinstalldirs) $(DESTDIR)$(kde_icondir)/locolor/16x16/apps/
#>- 	$(INSTALL_DATA) $(srcdir)/lo16-app-poof2.png $(kde_icondir)/locolor/16x16/apps/poof2.png
#>+ 1
	$(INSTALL_DATA) $(srcdir)/lo16-app-poof2.png $(DESTDIR)$(kde_icondir)/locolor/16x16/apps/poof2.png

uninstall-local:
#>- 	-rm -f $(kde_icondir)/locolor/16x16/apps/poof2.png
#>+ 1
	-rm -f $(DESTDIR)$(kde_icondir)/locolor/16x16/apps/poof2.png

# Uncomment the following two lines if you add a ui.rc file for your application to make use of
# KDE?s XML GUI builing
#rcdir = $(kde_datadir)/poof2
#rc_DATA = poof2ui.rc

#WARNING: if you use a ui.rc file above, use:

# messages: rc.cpp

# instead of 

# messages:

messages: 
	LIST=`find . -name \*.h -o -name \*.hh -o -name \*.H -o -name \*.hxx -o -name \*.hpp -o -name \*.cpp -o -name \*.cc -o -name \*.cxx -o -name \*.ecpp -o -name \*.C`; \
	if test -n "$$LIST"; then \
	 $(XGETTEXT) $$LIST -o $(podir)/poof2.pot; \
	fi
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:


#>+ 14
mainWin.cpp: $(srcdir)/mainWin.ui mainWin.h mainWin.moc
	rm -f mainWin.cpp
	echo '#include <klocale.h>' > mainWin.cpp
	$(UIC) -tr ${UIC_TR} -i mainWin.h $(srcdir)/mainWin.ui > mainWin.cpp.temp ; ret=$$?; \
	sed -e "s,${UIC_TR}( \"\" ),QString::null,g" mainWin.cpp.temp | sed -e "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | sed -e "s,image\([0-9][0-9]*\)_data,img\1_mainWin,g" >> mainWin.cpp ;\
	rm -f mainWin.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "mainWin.moc"' >> mainWin.cpp; else rm -f mainWin.cpp ; exit $$ret ; fi

mainWin.h: $(srcdir)/mainWin.ui
	$(UIC) -o mainWin.h $(srcdir)/mainWin.ui

mainWin.moc: mainWin.h
	$(MOC) mainWin.h -o mainWin.moc

#>+ 3
dcoper.moc.cpp: $(srcdir)/dcoper.h
	$(MOC) $(srcdir)/dcoper.h -o dcoper.moc.cpp

#>+ 3
clean-metasources:
	-rm -f  dcoper.moc.cpp

#>+ 4
clean-ui:
	-rm -f \
	mainWin.cpp mainWin.h mainWin.moc 

#>+ 2
docs-am:

#>+ 6
force-reedit:
		cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  poof2/Makefile
	cd $(top_srcdir) && perl admin/am_edit poof2/Makefile.in


#>+ 11
poof2.all_cpp.cpp: $(srcdir)/Makefile.in $(srcdir)/dcopdemoiface_skel.cpp $(srcdir)/dcoper.cpp $(srcdir)/main.cpp mainWin.cpp dcoper.moc.cpp  mainWin.moc
	@echo 'creating poof2.all_cpp.cpp ...'; \
	rm -f poof2.all_cpp.files poof2.all_cpp.final; \
	echo "#define KDE_USE_FINAL 1" >> poof2.all_cpp.final; \
	for file in dcopdemoiface_skel.cpp dcoper.cpp main.cpp mainWin.cpp dcoper.moc.cpp ; do \
	  echo "#include \"$$file\"" >> poof2.all_cpp.files; \
	  test ! -f $(srcdir)/$$file || egrep '^#pragma +implementation' $(srcdir)/$$file >> poof2.all_cpp.final; \
	done; \
	cat poof2.all_cpp.final poof2.all_cpp.files > poof2.all_cpp.cpp; \
	rm -f poof2.all_cpp.final poof2.all_cpp.files

#>+ 3
clean-final:
	-rm -f poof2.all_cpp.cpp

#>+ 2
final:
	$(MAKE) poof2_OBJECTS="$(poof2_final_OBJECTS)" all-am
#>+ 2
final-install:
	$(MAKE) poof2_OBJECTS="$(poof2_final_OBJECTS)" install-am
#>+ 2
no-final:
	$(MAKE) poof2_OBJECTS="$(poof2_nofinal_OBJECTS)" all-am
#>+ 2
no-final-install:
	$(MAKE) poof2_OBJECTS="$(poof2_nofinal_OBJECTS)" install-am
#>+ 3
cvs-clean:
	$(MAKE) admindir=$(top_srcdir)/admin -f $(top_srcdir)/admin/Makefile.common cvs-clean

#>+ 3
kde-rpo-clean:
	-rm -f *.rpo

#>+ 5
$(srcdir)/dcoper.cpp: mainWin.h 
$(srcdir)/dcopdemoiface.kidl: mainWin.h 
$(srcdir)/dcopdemoiface_skel.cpp: mainWin.h 
$(srcdir)/main.cpp: mainWin.h 
